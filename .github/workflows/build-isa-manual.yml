---
name: Build ISA Manual

on:
  push:
    tags:
      - v*
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup pyyaml
        uses: BSFishy/pip-action@v1
        with:
          packages: |
            pyyaml

      - name: Setup texlive
        run: |
          sudo apt update
          sudo apt install -y texlive texlive-latex-extra texlive-science cairosvg

      - name: Build ISA manual
        run: |
          cd isa-manual/build
          make

      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          path: isa-manual/build/mrisc32-instruction-set-manual.pdf
          name: mrisc32-instruction-set-manual.pdf

  release:
    if: contains(github.ref, 'tags/v')
    runs-on: ubuntu-22.04
    needs: build

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Store Release url
        run: |
          echo "${{ steps.create_release.outputs.upload_url }}" > ./upload_url

      - uses: actions/upload-artifact@v1
        with:
          path: ./upload_url
          name: upload_url

  publish:
    if: contains(github.ref, 'tags/v')
    runs-on: ubuntu-22.04
    needs: release

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
        name: mrisc32-instruction-set-manual.pdf
        path: ./

    - name: Download URL
      uses: actions/download-artifact@v1
      with:
        name: upload_url
        path: ./
    - id: set_upload_url
      run: |
        upload_url=`cat ./upload_url`
        echo ::set-output name=upload_url::$upload_url
    - name: Upload to Release
      id: upload_to_release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.set_upload_url.outputs.upload_url }}
        asset_path: mrisc32-instruction-set-manual.pdf
        asset_name: mrisc32-instruction-set-manual.pdf
        asset_content_type: application/pdf
